#+TITLE: tmp
#+DATE: 2014-10-22
#+SETUPFILE: ~/sys/lib/org-sty/octopress.org
#+JEKYLL_LAYOUT: post
#+JEKYLL_CATEGORIES: 
#+JEKYLL_PUBLISHED: true
#+OPTIONS: toc:nil tex:t ::t \n:t

* HI
* 1
** 2
*** 3
**** 4
***** 5
****** 6
* table
-
| a | b | c |
|---+---+---|
| 4 | 5 | 6 |
| 1 | 2 | 3 |

* Lord of the Rings
   My favorite scenes are (in this order)
   1. The attack of the Rohirrim
   2. Eowyn's fight with the witch king
      + this was already my favorite scene in the book
      + I really like Miranda Otto.
   3. Peter Jackson being shot by Legolas
      - on DVD only
      He makes a really funny face when it happens.
      But in the end, no individual scenes matter but the film as a whole.
   Important actors in this film are:
   - Elijah Wood :: He plays Frodo
   - Sean Austin :: He plays Sam, Frodo's friend.  I still remember
     him very well from his role as Mikey Walsh in The Goonies.

* Tmp
+ A
  + ABT
  + TA
    + ABNAT
      - aobnta
      + AOBTNEBN
+ B
+ C
- d
- e
+ F
- g
+ 1
  + 2
    + 3
      - 4
        - 5
          - 6
            - 7
              - 8
                - 9
* TABLE [[http://orgmode.org/manual/Tables-in-HTML-export.html#Tables-in-HTML-export][table]]

a

|      a | bbbbbbbbbb | c | d                      | e |
|--------+------------+---+------------------------+---|
| 111111 |            |   |                        |   |
|      2 |            |   |                        |   |
|      3 |            |   | jjjjjjjjjjjjjjjjjjjjjj |   |
|      4 |            |   |                        |   |

#+CAPTION: This is a table with lines around and between cells
#+ATTR_HTML: :border 2 :rules all :frame border
|      a | bbbbbbbbbb | c | d                      | e |
|--------+------------+---+------------------------+---|
| 111111 |            |   |                        |   |
|      2 |            |   |                        |   |
|      3 |            |   | jjjjjjjjjjjjjjjjjjjjjj |   |
|      4 |            |   |                        |   |


* TEXT [[http://orgmode.org/manual/Text-areas-in-HTML-export.html#Text-areas-in-HTML-export][text]]
#+ATTR_HTML: :textarea t :width 40
#+BEGIN_EXAMPLE
  (defun org-xor (a b)
     "Exclusive or."
     (if a (not b) b))
#+END_EXAMPLE

* line break
0
#+BEGIN_HTML
#+END_HTML
1
#+BEGIN_HTML
<br>
#+END_HTML
2
#+BEGIN_HTML
<br>
<br>
#+END_HTML
3
#+BEGIN_HTML
<br>
<br>
<br>
#+END_HTML
4

00
11

22


33



44


* latex

\begin{equation}
\begin{align}
\mbox{Union: }  A\cup B = \{x\mid x\in A \mbox{ or } x\in B\} \newline
\mbox{Concatenation: } A\circ B  = \{xy\mid x\in A \mbox{ and } y\in B\} \\
\mbox{Star: } A^\star  = \{x_1x_2\ldots x_k \mid  k\geq 0 \mbox{ and each } x_i\in A\} \\
\end{align}
\end{equation}

* latex
[[http://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html#sec-6][aa]]

\begin{equation}
x=\sqrt{b}
\end{equation}

If $a^2=b$ and \( b=2 \), then the solution must be
either $$ a=+\sqrt{2} $$ or \[ a=-\sqrt{2} \].

#+BEGIN_LATEX
\begin{equation}
x=\sqrt{b}
\end{equation}
If $a^2=b$ and \( b=2 \), then the solution must be
either $$ a=+\sqrt{2} $$ or \[ a=-\sqrt{2} \].
#+END_LATEX

- 
The mass of the sun is M_sun = 1.989 x 10^30 kg. 
The radius of the sun is R_{sun} = 6.96 x 10^8 m.
- @@latex:\overleftarrow{hi}\\@@
- @@latex:\underbrace{bye}\\@@
- Hi

* latex_abc
\Sigma








\Psi

\Omega

* 한글
광야(이육사)

까마득한 날에
하늘이 처음 열리고
어데 닭 우는 소리 들렸으랴

모든 산맥들이
바다를 연모해 휘달릴 때도
차마 이곳을 범하던 못하였으리라

끊임없는 광음을
부즈런한 계절이 피어선지고
큰 강물이 비로소 길을 열었다

지금 눈 나리고
매화향기 홀로 아득하니
내 여기 가난한 노래의 씨를 뿌려라

다시 천고의 뒤에
백마 타고 오는 초인이 있어
이 광야에서 목놓아 부르게 하리라


* [[http://blog.paphus.com/blog/2012/08/01/introducing-octopress-blogging-for-org-mode/][example]]
On an [[http://blog.paphus.com/blog/2012/07/21/octopress-and-org-mode/][earlier post]] I described a method for exporting [[http://www.gnu.org/software/emacs/][Emacs]] [[http://orgmode.org/][Org-Mode]] to Octopress. The main feature that simply exporting to HTML lacked was syntax highlighting. The method from my old post sadly was unreliable so I went back to the drawing boards and now I have a far better solution.

First you will need to set up [[http://octopress.org/][Octopress]] Following their instructions. I find that after cloning their repository and entering it I have to run these commands:
#+begin_src sh
  #!/bin/sh
  #
  curl -L https://get.rvm.io | bash -s stable --ruby
  source ~/.rvm/scripts/rvm
  rvm install 1.9.2
  rvm rubygems latest
  gem install bundler
  bundle install
  rake install
#+end_src

Like last time, we need a =save-then-publish= function in our =.emacs=
#+begin_src scheme :title Save Then Publish :url http://doc.norang.ca/org-mode.html :urltext source
  (defun save-then-publish ()
    (interactive)
    (save-buffer)
    (org-save-all-org-buffers)
    (org-publish-current-project))
#+end_src

And we also need to set up our projects. I personally store my octopress blog in =~/git/blog/= but if you store your blog elsewhere you will need to change paths.
#+begin_src scheme :title Publish Projects :url http://jaderholm.com/blog/blogging-with-org-mode-and-octopress :urltext source
  (setq org-publish-project-alist
        '(("blog-org" .  (:base-directory "~/git/blog/source/org_posts/"
                                          :base-extension "org"
                                          :publishing-directory "~/git/blog/source/_posts/"
                                          :sub-superscript ""
                                          :recursive t
                                          :publishing-function org-publish-org-to-octopress
                                          :headline-levels 4
                                          :html-extension "markdown"
                                          :octopress-extension "markdown"
                                          :body-only t))
          ("blog-extra" . (:base-directory "~/git/blog/source/org_posts/"
                                           :publishing-directory "~/git/blog/source/"
                                           :base-extension "css\\|pdf\\|png\\|jpg\\|gif\\|svg"
                                           :publishing-function org-publish-attachment
                                           :recursive t
                                           :author nil
                                           ))
          ("blog" . (:components ("blog-org" "blog-extra")))
          ))
#+end_src

Now we need to edit the =Rakefile= in the blog. Find your Misc Configs section and change =new_post_ext=, =new_page_ext=, and add =org_posts_dir= like I have below:
#+begin_src text :title Rakefile :url https://gist.github.com/1244494 :urltext source
  ## -- Misc Configs -- ##
  
  public_dir      = "public"    # compiled site directory
  source_dir      = "source"    # source file directory
  blog_index_dir  = 'source'    # directory for your blog's index page (if you put your index in source/blog/index.html, set this to 'source/blog')
  deploy_dir      = "_deploy"   # deploy directory (for Github pages deployment)
  stash_dir       = "_stash"    # directory to stash posts for speedy generation
  posts_dir       = "_posts"    # directory for blog files
  org_posts_dir   = "org_posts"
  themes_dir      = ".themes"   # directory for blog files
  new_post_ext    = "org"  # default new post file extension when using the new_post task
  new_page_ext    = "org"  # default new page file extension when using the new_page task
  server_port     = "4000"      # port for preview server eg. localhost:4000
#+end_src

We also need to edit the =Rakefile= so that the header of a new post gets wrapped in HTML tags. Find the section I have below and add the lines for =BEGIN_HTML= and =END_HTML=.
#+begin_src text :title Rakefile :url https://gist.github.com/1244494 :urltext source
      post.puts "#+BEGIN_HTML"
      post.puts "---"
      post.puts "layout: post"
      post.puts "title: \"#{title.gsub(/&/,'&amp;')}\""
      post.puts "date: #{Time.now.strftime('%Y-%m-%d %H:%M')}"
      post.puts "comments: true"
      post.puts "categories: "
      post.puts "---"
      post.puts "#+END_HTML"
#+end_src

Now we need to grab the new Octopress exporter I made by making modifications to the built in HTML exporter. The new exporter is located on github at [[https://github.com/craftkiller/orgmode-octopress]]. So download [[https://raw.github.com/craftkiller/orgmode-octopress/master/org-octopress.el][org-octopress.el]] and place it somewhere in your emacs load-path and add =(require 'org-octopress)=. I cloned the repository in ~/git/ so in my emacs I added
#+begin_src scheme :title .emacs
  (add-to-list 'load-path "~/git/orgmode-octopress")
  (require 'org-octopress)
#+end_src

Now you should be ready to blog! To create a new post you must first create it and then move it to the org\_posts directory like so:
#+begin_src sh
  cd blog
  rake "new_post[title]"
  mv source/_posts/2012-08-01-title.org source/org_posts/
  # I keep my posts in GIT so then I add it to the repo
  git add source/org_posts/2012-08-01-title.org
#+end_src

After writing the post simply do =M-x save-then-publish= in Emacs and then go back to your shell and run =rake gen_deploy=. You should now have your post online.

The main feature that I added was the ability to have syntax highlighted blocks. Right now this will only work with all lower-case =begin_src= =end_src= blocks. It supports options for =:title= =:url= and =:urltext=. If you would like to see an example of this, the source code to this post is located at [[http://blog.paphus.com/org_posts/2012-08-01-introducing-octopress-blogging-for-org-mode.org][http://blog.paphus.com/org\_posts/2012-08-01-introducing-octopress-blogging-for-org-mode.org]]. If anyone wants to help improve the exporter please join me on github!

Finally, You may want to edit your .htaccess file to redirect image requests. I redirected all SVG image requests to the root directory so perma-links dont fail to access the images. You want to locate the =.htaccess= file in the =source= directory
#+begin_src text :title .htaccess
  Options +FollowSymlinks
  RewriteEngine on
  RewriteBase /
  RewriteRule /([^/]+)\.(svg)$ /$1.$2 [R,L]
#+end_src

{{{more}}}

